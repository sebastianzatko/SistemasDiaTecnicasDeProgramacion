<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="button2.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        gg==
</value>
  </data>
</root>